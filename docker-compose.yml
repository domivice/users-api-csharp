version: "3.4"

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PACKAGE_SOURCE_USERNAME: ${PACKAGE_SOURCE_USERNAME}
        PACKAGE_SOURCE_PASSWORD: ${PACKAGE_SOURCE_PASSWORD}
    ports:
      - "5005:5005"
    environment:
      ASPNETCORE_URLS: "https://+;http://+"
      ASPNETCORE_HTTPS_PORT: "5005"
      ASPNETCORE_Kestrel__Certificates__Default__Password: "password"
      ASPNETCORE_Kestrel__Certificates__Default__Path: "/https/aspnetapp.pfx"
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: ${DEFAULT_CS}
    volumes:
      - /Users/nelsonkana/.aspnet/https:/https/
    depends_on:
      - db
  db:
    image: "mcr.microsoft.com/azure-sql-edge"
    ports:
      - "1433:1433"
    environment:
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD}
      MSSQL_PID: "Developer"
      MSSQL_USER: ${MSSQL_USER}
      ACCEPT_EULA: "Y"
    volumes:
      - ./mssql:/var/opt/mssql/data
  sqlcmd:
    image: mcr.microsoft.com/mssql-tools:latest
    stdin_open: true
    environment:
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD}
      MSSQL_DATABASE: "DomiviceUsers"
    volumes:
      - ./sql:/sql
    command: /bin/bash -c '/opt/mssql-tools/bin/sqlcmd -S db -U sa -P $$MSSQL_SA_PASSWORD -i /sql/InitialMigration.sql; wait;'
    depends_on:
      - db
        